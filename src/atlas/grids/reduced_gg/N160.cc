// TL319

#include "atlas/grids/reduced_gg/Grids.h"

namespace atlas {
namespace grids {
namespace reduced_gg {

N160::regist N160_builders;

void N160::construct()
{
  int N=160;
  int lon[] = {
     18,
     25,
     36,
     40,
     45,
     50,
     60,
     64,
     72,
     72,
     80,
     90,
     90,
     96,
    108,
    120,
    120,
    125,
    128,
    135,
    144,
    150,
    160,
    160,
    180,
    180,
    180,
    192,
    192,
    200,
    216,
    216,
    225,
    225,
    240,
    240,
    243,
    250,
    256,
    270,
    270,
    288,
    288,
    288,
    300,
    300,
    320,
    320,
    320,
    320,
    324,
    360,
    360,
    360,
    360,
    360,
    360,
    375,
    375,
    375,
    384,
    384,
    400,
    400,
    400,
    405,
    432,
    432,
    432,
    432,
    432,
    450,
    450,
    450,
    450,
    480,
    480,
    480,
    480,
    480,
    480,
    480,
    500,
    500,
    500,
    500,
    500,
    512,
    512,
    540,
    540,
    540,
    540,
    540,
    540,
    540,
    540,
    576,
    576,
    576,
    576,
    576,
    576,
    576,
    576,
    576,
    576,
    600,
    600,
    600,
    600,
    600,
    600,
    600,
    600,
    600,
    640,
    640,
    640,
    640,
    640,
    640,
    640,
    640,
    640,
    640,
    640,
    640,
    640,
    640,
    640,
    640,
    640,
    640,
    640,
    640,
    640,
    640,
    640,
    640,
    640,
    640,
    640,
    640,
    640,
    640,
    640,
    640,
    640,
    640,
    640,
    640,
    640,
    640,
    640,
    640,
    640,
    640,
    640,
    640
  };
  std::vector<double> lat(N);
  eckit::Log::warning() << className() << " uses predicted gaussian latitudes" << std::endl;
  predict_gaussian_latitudes_hemisphere(N,lat.data());
  setup_lat_hemisphere(N,lon,lat.data(),DEG);
}

}
}
}
