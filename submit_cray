#!/usr/bin/env python

"""
submit_cray: Create job submission file for Cray, and submit
Usage:
    submit_cray -s NAME -n TASKS -d THREADS command args
"""

from argparse import ArgumentParser
from math import ceil
import os, subprocess

####################################################################
# Parsing input
####################################################################

parser = ArgumentParser()
parser.add_argument('-s', '--name', type=str, default='pantarhei')
parser.add_argument('-n', '--tasks',   type=int, default=1)
parser.add_argument('-d', '--threads', type=int, default=1)
parser.add_argument('command', type=str, nargs='*', help="command", default=['shallow_water'])
args = parser.parse_args()

replace_text = {
    'cwd':os.getcwd(),
    'nodes':int(ceil(args.tasks*args.threads/24.)),
    'tasks':args.tasks,
    'threads':args.threads,
    'command':' '.join(args.command),
    'name':args.name,
}

####################################################################
# Writing out jobfile
####################################################################

with open(args.name+'.job','w') as file:
  file.write(
'''
#!/bin/bash
#PBS -N {name}
#PBS -l select={nodes}:ncpus=24
#PBS -q workq
#PBS -o {name}.out
#PBS -j oe
#PBS -v DISPLAY

. /etc/bash.bashrc

export PSC_OMP_AFFINITY=FALSE
export OMP_NUM_THREADS={threads}

cd {cwd}
aprun -n {tasks} -d {threads} {command} 2>&1 | tee {name}.log
'''
.format(**replace_text) )

####################################################################
# Submitting jobfile
####################################################################

print('Submitting job "{name}.job" on {nodes} nodes... '.format(**replace_text))
print('Full output available after job is finished in "{name}.out"'.format(**replace_text))
print('During runtime:    tail -c+1 -F {name}.log'.format(**replace_text))
subprocess.Popen("qsub {name}.job".format(**replace_text), env=os.environ, shell=True).wait()
